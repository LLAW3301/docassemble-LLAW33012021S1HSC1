# Code to import a CSV into a DAList of dictionaries.  
#
# Assumes the first row of the CSV is the header row.
# Reads the input file and calls csv to create a list of lists.
# 
# Must set the variable HSCimport_message to something.  See the
# question block.
---
include:
  - HSC_global_vars.yml
---
objects:
 # - csv_data: DAList.using(auto_gather=False, there_are_any=True)
  - csv_data: DADict.using(auto_gather=False, there_are_any=True)
---
code: |
  #csv_data.clear()
  #csv_data = DADict()
  csv_data.clear()
  csv_data.object_type = DAList
  for key in HSCdata.keys():
    HSCdata.delete(key)

  # Read the data into a CSV object
  all_the_lines = csv_import.slurp()
  
  # Initialise row_headers so DA doesn't trip over a NameError
  row_headers = []
  
  # Outer loop index
  index = 0
  for line in all_the_lines.splitlines():
    elements = line.replace('"', '').split(',')
    
    # Save the row headers, which are the first row
    if index == 0:
      for an_element in elements:
        row_headers.append(an_element)
      index += 1
      continue
    
    # Initialise temp variable
    a_row = DADict()
    # Iterate through the rest of the elements and populate the CSV record
    j = 0
    for an_element in elements:
      a_row[row_headers[j]] = an_element
      j += 1
 
    # here is where we'd need to append the a_row to the appropriate list
    # and use the name as a key to the data store
    #if a_row[row_headers[1]] not in csv_data_dict:
    
    csv_data[a_row.get('Council')].append(a_row)
    # append to the data
    #csv_data.append(a_row)
    # Increment the loop index
    index += 1
    
  #csv_data.gathered = True
  csv_data.gathered = True
  #csv_data_copy = csv_data.split()
  for key in csv_data.keys():
    #csv_data[key].there_is_another = False
    csv_data[key].gathered = True
    csv_data[key][csv_data[key].number() - 1].there_is_another = False
    HSCdata.set(key, csv_data[key])
    HSCdata.get(key).set_object_type(DAList)
    #undefine('csv_data[key]')
    #test_var += 1
  test_var = 0
  # undefine the temporary object used to create the DAStore
  # so that from now on data will only be taken from the DAStore
  # and not from csv_data
  
  #undefine('csv_data')
---
question: Import CSV File
subquestion: |
  ${ HSCimport_message }
  
  **Note:** The first row of the file **must** be the header row.
  
fields:
  - no label: csv_import
    datatype: file
---

