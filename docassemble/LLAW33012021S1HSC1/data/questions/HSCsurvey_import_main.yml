# Imports projects for the semester into a DAStore that can
# be accessed from other interview.  Import file should be a CSV with
# these fields:
# - Project Identifier
# - Organisation
# - Description
# - URL (to Problem STatement in FLO)
#
# Example:
#
# Project Identifier,Organisation,Description,URL
# P01. UnitingSA,UnitingSA,NDB Assessor,https://flo.flinders.edu.au/mod/resource/view.php?id=2679033
# P02. FPSA,Family Planning Network SA,Service Directory,https://flo.flinders.edu.au/mod/resource/view.php?id=2679040
---
include:
  - HSC_survey_constants.yml
  - HSC.csv.yml
  - HSC_problem_statement_importer.yml
  - HSC_survey_import_questions.yml
---
# Are we importing projects or student data
mandatory: True
question: Data Import
subquestion: |
  Just imports data and does nothing else
buttons:
  - Import Data:
      code: |
        data_import = HSCconstants.data_import_key
  - Exit: exit
---
# Main code block after initial screen
mandatory: True
code: |
  upload_to_dastore
  display_final_screen
---
# Set the logic to run depending on our selection
code: |
  HSCcurrent_data_processed
  hsc_data.set(HSCconstants.data_import_key, HSCcurrent_data)
  undefine('HSCcurrent_data')

  upload_to_dastore = True
---
# ...display a final screen
event: display_final_screen
question: Data Import complete
subquestion: |
  Data has been imported into `DAStore`.  The table below shows the 
  current state of the database.

  ${ HSCcurrent_data_table }
buttons:
  - Exit: exit
  - Restart: restart
---

# Process the student data.  The data imported from the FLO CSV is not
# exactly what we want.  We want to strip out the superfluous groups and
# have just a single 'seminar' entry
# Note: we don't have an analagous code block for project data as we don't
#       need to process it before we import it.
# Note: this must sit above the DAStore get blocks so that when DA comes
#       looking to define current_students_data it doesn't pick up this
#       code block.
code: |
  HSCcurrent_data = []
  for _entry in csv_data:
    an_item = {}
    if _entry['Aboriginal'] == 'True':
      an_item['Aboriginal'] = True
    else:
      an_item['Aboriginal'] = False
    
    an_item['FAN'] = _entry['FAN']
    an_item['first_name'] = _entry['First name']
    an_item['last_name'] = _entry['Surname']
    # We don't trust the supplied email address.  Create a FAN@flinders... email instead
    an_item['email'] = '{}@flinders.edu.au'.format(_entry['FAN'])
    #an_item['email'] = _entry['Email address']

    # Find the seminar
    an_item['seminar'] = 'No Seminar'
    for _key in _entry:
      if _key[:5] == 'Group' and _entry[_key][:7] == 'Seminar':
        an_item['seminar'] = _entry[_key]
        break
    
    # Add our record to current_students_data
    HSCcurrent_data.append(an_item)
  
  # Set this to trigger DA to process this code block
  HSCcurrent_data_processed = True
---
# These two code blocks go together at the end.  DA will process these
# first.  This means DA will always try to fetch data from DAStore first
# Get the current projects
code: |
  HSCcurrent_data = hsc_data.get(HSCconstants.data_import_key)
---
