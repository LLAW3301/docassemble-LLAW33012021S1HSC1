---
imports:
  - json
---
features:
  css: HSC.css
---
objects from file:
# Postcodes information is from a database by Matthew Proctor, available
# at https://www.matthewproctor.com/full_australian_postcodes_sa
# 
# **It will eventually need to be updated**
# 
# The data was copy-pasted into excel, converted to a CSV file containing only
# the Postcode and Locality columns, and then a Find+Replace run on
# this CSV file using Notepad++ & Regex:
#   Find: ^(\d+),(.+)$
#   Replace with: \t{"postcode": "$1", "placename": "$2"}
# Then start & end characters were added manually:
#   Start: [
#   End: ]
# And finally the last comma in the list was removed, producing
# a valid json file to use here.
  - postcodes: HSC.json
---
initial: True
code: |
  log("var HSCcouncil = " + json.dumps(postcodes.as_serializable()) + ";", "javascript")
---
question: |
  Location
subquestion: |
  Please enter your clients postcode and then select a relevant council. 
  If two council areas come up refer to cheat sheet/hint. 
  
  <span id="postcode-input-container">[FIELD HSCcouncil]</span>
  
  <div id="postcodes-list"></div>
fields:
  - Council area: HSCcouncil
script: |
  <script>
    const resultsLimit = 20;
    
    const postcodeInputSpan = document.getElementById('postcode-input-container');
    const postcodeInput = postcodeInputSpan.getElementsByClassName('dainput-embedded')[0];
    const postcodesList = document.getElementById('postcodes-list');
    
    postcodeInput.addEventListener('input', updateSearchList);
    
    function updateSearchList(e) {
      const searchQuery = e.target.value.replace(/\W/g, '');
      
      if (searchQuery.length == 0) {
        postcodesList.innerHTML = '';
        return;
      }
      
      const searchRegex = new RegExp(searchQuery, 'i');
      
      let results = [];
      for (i = 0; i < HSCcouncil.elements.length; i++) {
        const entry = HSCcouncil.elements[i];
        const entrySearchText = (entry.postcode + entry.placename).replace(/\W/g, '');
        if (searchRegex.test(entrySearchText)) {
          results.push(entry);
        }
        if (results.length >= resultsLimit) {
          break;
        }
      }
      
      postcodesList.innerHTML = results.map(r => '<p><div class="btn btn-da btn-info postcode-search-result" onclick="selectPostcode(' + r.postcode + ')">' + r.postcode + ': ' + r.placename + '</div></p>').join('');
    }
    
    function selectPostcode(postcode) {
      postcodeInput.value = postcode;
      HSCcouncil_area.value = postcode;
      postcodesList.innerHTML = '';
    }
  </script>
---
#variable name: data_structure
#use objects: True
#data:
#  - 5067:
#    Norwood: Norwood and St Peters
#    Beulah Park: Norwood and St Peters
#    Norwood South: Norwood and St Peters
##  - 5043:
#    Someplace: A place
---
objects:
  - HSCcouncils: DADict
---
mandatory: True
code: |
  HSCcouncils[5007] = ['City of Charles Sturt']
  HSCcouncils[5008] = ['City of Charles Sturt', 'City of Port Adelaide Enfield']
  HSCcouncils[5009] = ['City of Charles Sturt']
  HSCcouncils[5010] = ['City of Port Adelaide Enfield']
  HSCcouncils[5011] = ['City of Charles Sturt']
  HSCcouncils[5012] = ['City of Charles Sturt', 'City of Port Adelaide Enfield']
  HSCcouncils[5013] = ['City of Charles Sturt', 'City of Port Adelaide Enfield']
  HSCcouncils[5014] = ['City of Charles Sturt', 'City of Port Adelaide Enfield']
  HSCcouncils[5015] = ['City of Port Adelaide Enfield']
  HSCcouncils[5016] = ['City of Port Adelaide Enfield']
  HSCcouncils[5017] = ['City of Port Adelaide Enfield']
  HSCcouncils[5018] = ['City of Port Adelaide Enfield']
  HSCcouncils[5019] = ['City of Charles Sturt', 'City of Port Adelaide Enfield']
  HSCcouncils[5020] = ['City of Charles Sturt']
  HSCcouncils[5021] = ['City of Charles Sturt']
  HSCcouncils[5022] = ['City of Charles Sturt']
  HSCcouncils[5023] = ['City of Charles Sturt']
  HSCcouncils[5024] = ['City of Charles Sturt']
  HSCcouncils[5025] = ['City of Charles Sturt']
  HSCcouncils[5037] = ['City of Marion']
  HSCcouncils[5038] = ['City of Marion']
  HSCcouncils[5039] = ['City of Marion']
  HSCcouncils[5042] = ['City of Marion']
  HSCcouncils[5043] = ['City of Marion']
  HSCcouncils[5044] = ['City of Marion']
  HSCcouncils[5046] = ['City of Marion']
  HSCcouncils[5047] = ['City of Marion', 'City of Onkaparinga']
  HSCcouncils[5048] = ['City of Marion']
  HSCcouncils[5049] = ['City of Marion']
  HSCcouncils[5051] = ['City of Onkaparinga']
  HSCcouncils[5075] = ['City of Port Adelaide Enfield', 'City of Tea Tree Gully']
  HSCcouncils[5082] = ['City of Charles Sturt']
  HSCcouncils[5083] = ['City of Port Adelaide Enfield']
  HSCcouncils[5084] = ['City of Port Adelaide Enfield']
  HSCcouncils[5085] = ['City of Port Adelaide Enfield']
  HSCcouncils[5086] = ['City of Port Adelaide Enfield', 'City of Tea Tree Gully']
  HSCcouncils[5087] = ['City of Port Adelaide Enfield']
  HSCcouncils[5088] = ['City of Port Adelaide Enfield', 'City of Tea Tree Gully']
  HSCcouncils[5089] = ['City of Tea Tree Gully']
  HSCcouncils[5090] = ['City of Tea Tree Gully']
  HSCcouncils[5091] = ['City of Tea Tree Gully']
  HSCcouncils[5092] = ['City of Tea Tree Gully']
  HSCcouncils[5093] = ['City of Port Adelaide Enfield', 'City of Tea Tree Gully']
  HSCcouncils[5094] = ['City of Port Adelaide Enfield']
  HSCcouncils[5096] = ['City of Tea Tree Gully']
  HSCcouncils[5097] = ['City of Tea Tree Gully']
  HSCcouncils[5098] = ['City of Port Adelaide Enfield']
  HSCcouncils[5109] = ['City of Tea Tree Gully']
  HSCcouncils[5125] = ['City of Tea Tree Gully']
  HSCcouncils[5126] = ['City of Tea Tree Gully']
  HSCcouncils[5127] = ['City of Tea Tree Gully']
  HSCcouncils[5131] = ['City of Tea Tree Gully']
  HSCcouncils[5153] = ['City of Onkaparinga']
  HSCcouncils[5157] = ['City of Onkaparinga']
  HSCcouncils[5158] = ['City of Marion', 'City of Onkaparinga']
  HSCcouncils[5159] = ['City of Onkaparinga']
  HSCcouncils[5160] = ['City of Onkaparinga']
  HSCcouncils[5161] = ['City of Onkaparinga']
  HSCcouncils[5162] = ['City of Onkaparinga']
  HSCcouncils[5163] = ['City of Onkaparinga']
  HSCcouncils[5164] = ['City of Onkaparinga']
  HSCcouncils[5165] = ['City of Onkaparinga']
  HSCcouncils[5166] = ['City of Onkaparinga']
  HSCcouncils[5167] = ['City of Onkaparinga']
  HSCcouncils[5168] = ['City of Onkaparinga']
  HSCcouncils[5169] = ['City of Onkaparinga']
  HSCcouncils[5170] = ['City of Onkaparinga']
  HSCcouncils[5171] = ['City of Onkaparinga']
  HSCcouncils[5172] = ['City of Onkaparinga']
  HSCcouncils[5173] = ['City of Onkaparinga']
  HSCcouncils[5174] = ['City of Onkaparinga']
  HSCcouncils.gathered = True
---
# Initial screen as per revised flow chat
field: welcome_screen
question: Welcome
subquestion: |
  Welcome to the Hutt Street Centre Community Access Tool.
  
  The tool can help you make a list of relevant community services for a client. It will filter community services based on council area and information about the client.
  
  What do you want to do?
  
  Click 'Tool' to start.
  
  Click 'Administration' to update the service list.
  
buttons:
  - Tool: proceed
  - Administration: signin
sets: HSCsign_in_page
---
# LHS Welcome Screen -- system admin pathway
question: Edit Service List
subquestion: |
  
  To make a change to the services you need to change the master file. 
  
  Upload the {CSV} file to make the changes in the tool. 
  
  It is important that you have consent to make changes.
   
  ***Disclaimer:***   
  There is no way to recover lost data. Flinders University is not responsible for lost data. 
  
  Do you have consent to make changes?
yesno: HSCadmineligible

terms:
  CSV: You can use the template CSV file named HSC2TEMPLATE.csv to input data and the appropriate information. 
progress: 25
---
# Confirmation screen when uploading CSV data to the system
question: Confirm Upload
subquestion: |
  
  Confirm you would like to upload the new file. 
  
  If you proceed, the current data will be overwritten.
  File being uploaded is **${csv_import[0].filename}**.
  
  No changes will be made if you do not confirm.
yesno: HSCadminupload
progress: 75
---
# RHS Welcome Screen -- regular user pathway
question: Community Services Tool
subquestion: |
  
  This tool can help you make a list of relevant community services for a client. It will filter community services based on council area and information about the client.
 
  ***Disclaimer:***   
  This is a guide only and may not include all services.
  There are no guarantees that any individual service will accept your clients enquiry or provide services to them.
  
  Do you accept these terms?
yesno: HSCeligible
progress: 1
---
question: |
  Location
subquestion: |
  Please enter your clients postcode and then select a relevant council. 
  If two council areas come up refer to cheat sheet/hint.
fields:
  - Postcode: HSCpostcode
    datatype: integer
    min: 5000
    max: 5999
    validation messages: 
      max: |
        Please enter a 4 digit postcode
    default: 5043
  - Council: HSCcouncil
    datatype: radio
    code:
      councils
      #HSCpostcodes[HSCpostcode]
    #none of the above: None of the above
check in: input_postcode
---
#sets: councils
event: input_postcode
code: |
  if action_argument('HSCpostcode') and HSCpostcode != int(action_argument('HSCpostcode')):
    HSCpostcode = int(action_argument('HSCpostcode'))
    if HSCpostcode not in HSCcouncils:
      councils = ['No Councils Available']
    else:
      # assign a copy of the list, so that when we append 'None of the Above' option, the original list does not change
      councils = HSCcouncils[HSCpostcode].copy()
      councils.append('None of the Above')
    background_response('refresh')
  background_response()
---
mandatory: True
code: |
  HSCpostcode = 5043
  councils = HSCcouncils[HSCpostcode].copy()
  councils.append('None of the Above')
---
#reset:
#  - councils
---
question: |
  Council
subquestion:
fields:
  - no label: HSCcouncil_old
    datatype: radio
    choices:
      - City of Marion
      - City of Charles Sturt
      - City of Port Adelaide Enfield
      - City of Tea Tree Gully
---
# Gender question
question: |
  Gender
subquestion: |
  Which gender below best describes the client?
  
  Choose 'Other' if male or female does not describe them.
  
  If the client chooses not to disclose their gender, this may effect the service outcome.
  
  If they do not want to share, choose 'Prefer not to say'.
fields: 
  - no label: HSCgender
    datatype: radio
    choices:
     - "Female": Female
     - "Male": Male
     - "Other or Prefer not to say": Other
    default: |
      Female
progress: 30
---
# Age question
question: |
  Age
subquestion: |
  What is the client's age?
fields:
  Age: HSCage
  datatype: integer
  min: 0
  max: 100
  validation messages: 
    max: |
      Please enter an age between 0 and 100
  default: |
    36
progress: 40
---
# Children question
question: |
  Children
subquestion: |
  Does the client have any children under 18 years of age in their {care}?
yesno: HSCchildren
terms:
  care: A child or children are in a clients care if they have custody of or live with them
progress: 50
---
# ATSI question
question: |
  Aboriginal or Torres Strait Islander
subquestion: | 
  Is the client of Aboriginal or Torres Strait Islander descent?
yesno: HSCatsi
progress: 60
---
# Concessions question
question: |
  Concessions
subquestion: |
  Which concessions is the client eligible for?
  
  You can choose as many as you need. 
  
  If you are unsure, please select 'None of the above'.
fields: 
  - no label: HSCconcession
    datatype: checkboxes
    choices:
     - "Health Care Card"
     - "Seniors Card"
     - "Department of Veteran Affairs Card"
     - "Disability Support Pension"
     - "Student"
    default: |
      Health Care Card
progress: 70
---
# Other factors question
question: |
  Other Factors
subquestion: | 
  Which of the below apply to the client?
  
  You can choose as many as you need. 
  
  If you are unsure, please select 'None of the above'.
fields: 
  - no label: HSCfactor
    datatype: checkboxes
    choices:
     - "Disability"
     - "ESL"
     - "Immigrant"
     - "Migrant"
     - "Refugee"
     - "LGBTQIA"
    default: |
      ESL
progress: 80
---
